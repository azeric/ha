- platform: template
  sensors:
    beaker:
      value_template:  '{% if is_state("device_tracker.beaker", "home") %} Online {% else %} Offline {%- endif %}'
    ashleighsipad:
      value_template:  '{% if is_state("device_tracker.ashleighsipad", "home") %} Online {% else %} Offline {%- endif %}'
    outside_temp:
      value_template: '{{ states.sensor.dark_sky_temperature.state | round(0) }}'
      unit_of_measurement: '°F'
      friendly_name: 'Temp'
    temp_high:
      value_template: '{{ states.sensor.dark_sky_daily_high_temperature.state | round(0) }}'
      unit_of_measurement: '°F'
      friendly_name: "Today's High"
    temp_low:
      value_template: '{{ states.sensor.dark_sky_daily_low_temperature.state | round(0) }}'
      unit_of_measurement: '°F'
      friendly_name: "Today's Low"
    poughkeepsie_leaving1:
      value_template: '{{as_timestamp(states.sensor.barn_to_city1.attributes["Origin Stop Arrival Time"]) | timestamp_custom("%D") + " Leaves: " + as_timestamp(states.sensor.barn_to_city1.attributes["Origin Stop Arrival Time"]) | timestamp_custom("%I:%M %P") + " Arrives: " + as_timestamp(states.sensor.barn_to_city1.attributes["Destination Stop Arrival Time"]) | timestamp_custom("%I:%M %P")}}'
      friendly_name: "First Train at: "
    poughkeepsie_leaving2:
      value_template: '{{as_timestamp(states.sensor.barn_to_city2.attributes["Origin Stop Arrival Time"]) | timestamp_custom("%D") + " Leaves: " + as_timestamp(states.sensor.barn_to_city2.attributes["Origin Stop Arrival Time"]) | timestamp_custom("%I:%M %P") + " Arrives: " + as_timestamp(states.sensor.barn_to_city2.attributes["Destination Stop Arrival Time"]) | timestamp_custom("%I:%M %P")}}'
      friendly_name: "Next train at: "
    poughkeepsie_leaving3:
      value_template: '{{as_timestamp(states.sensor.barn_to_city3.attributes["Origin Stop Arrival Time"]) | timestamp_custom("%D") + " Leaves: " + as_timestamp(states.sensor.barn_to_city3.attributes["Origin Stop Arrival Time"]) | timestamp_custom("%I:%M %P") + " Arrives: " + as_timestamp(states.sensor.barn_to_city3.attributes["Destination Stop Arrival Time"]) | timestamp_custom("%I:%M %P")}}'
      friendly_name: "Next train at: "
    to_city:
      value_template:  '{{ states.sensor.to_city.state | replace(‘min’,’’) | int }}'
    to_barn:
      value_template: >-
         {% set uptime = sensor.to_barn.state | int %}
         {% set minutes = ((uptime % 60) / 1) | int %}
         {% set hours = ((uptime % 1440) / 60) | int %}
         {% set days = (uptime /1440) | int %}

         {%- if uptime < 1 -%}
           Less than a minute
         {%- else -%}
           {%- if days > 0 -%}
             {%- if days == 1 -%}
               1 day
             {%- else -%}
               {{ days }} days
             {%- endif -%}
           {%- endif -%}
           {%- if hours > 0 -%}
             {%- if days > 0 -%}
               {{ ', ' }}
             {%- endif -%}
             {%- if hours == 1 -%}
               1 hour
             {%- else -%}
               {{ hours }} hours
             {%- endif -%}
           {%- endif -%}
           {%- if minutes > 0 -%}
             {%- if days > 0 or hours > 0 -%}
               {{ ', ' }}
             {%- endif -%}
             {%- if minutes == 1 -%}
               1 minute
             {%- else -%}
               {{ minutes }} minutes
             {%- endif -%}
           {%- endif -%}
         {%- endif -%}
      friendly_name: "To Barn"
